// Code generated by W:\rohin\Tools\shader_tool\bin\shader_tool.exe
#include "./shaders_generated.h"

void shader_Lighting::InitShaderLocs() {
    r_Projection.Location = 1;
    for (int n = 0; n < 32; n++) {
        r_pointLights[n].Position.Location = 2+(n*6);
        r_pointLights[n].Direction.Location = 3+(n*6);
        r_pointLights[n].Color.Location = 4+(n*6);
        r_pointLights[n].Strength.Location = 5+(n*6);
        r_pointLights[n].Inner.Location = 6+(n*6);
        r_pointLights[n].Outer.Location = 7+(n*6);
    }
    for (int n = 0; n < 32; n++) {
        r_spotLights[n].Position.Location = 194+(n*6);
        r_spotLights[n].Direction.Location = 195+(n*6);
        r_spotLights[n].Color.Location = 196+(n*6);
        r_spotLights[n].Strength.Location = 197+(n*6);
        r_spotLights[n].Inner.Location = 198+(n*6);
        r_spotLights[n].Outer.Location = 199+(n*6);
    }
    r_sun.Position.Location = 386;
    r_sun.Direction.Location = 387;
    r_sun.Color.Location = 388;
    r_sun.Strength.Location = 389;
    r_sun.Inner.Location = 390;
    r_sun.Outer.Location = 391;
    r_View.Location = 392;
    u_normal.Location = 393;
    u_depth.Location = 394;
    u_amr.Location = 395;
}
void shader_Line::InitShaderLocs() {
    r_VP.Location = 1;
    r_Transform.Location = 2;
    r_CamPos.Location = 3;
    r_LineColor.Location = 4;
    r_LineFadeStart.Location = 5;
    r_LineFadeEnd.Location = 6;
    r_LineFadeMaximum.Location = 7;
    r_LineFadeMinimum.Location = 8;
}
void shader_Line2D::InitShaderLocs() {
    for (int n = 0; n < 2; n++) {
        r_verts[n].Location = 1+n;
    }
    r_orthoProjection.Location = 3;
    r_Color.Location = 4;
}
void shader_Line3D::InitShaderLocs() {
    for (int n = 0; n < 2; n++) {
        r_verts[n].Location = 1+n;
    }
    r_View.Location = 3;
    r_Projection.Location = 4;
    r_Color.Location = 5;
}
void shader_Mix::InitShaderLocs() {
    r_tex1.Location = 1;
    r_tex2.Location = 2;
    r_mixValue.Location = 3;
}
void shader_Normals::InitShaderLocs() {
    r_Transform.Location = 1;
    r_VP.Location = 2;
}
void shader_PBR_static::InitShaderLocs() {
    r_VP.Location = 1;
    r_Transform.Location = 2;
    for (int n = 0; n < 32; n++) {
        r_pointLights[n].Position.Location = 3+(n*6);
        r_pointLights[n].Direction.Location = 4+(n*6);
        r_pointLights[n].Color.Location = 5+(n*6);
        r_pointLights[n].Strength.Location = 6+(n*6);
        r_pointLights[n].Inner.Location = 7+(n*6);
        r_pointLights[n].Outer.Location = 8+(n*6);
    }
    for (int n = 0; n < 32; n++) {
        r_spotLights[n].Position.Location = 195+(n*6);
        r_spotLights[n].Direction.Location = 196+(n*6);
        r_spotLights[n].Color.Location = 197+(n*6);
        r_spotLights[n].Strength.Location = 198+(n*6);
        r_spotLights[n].Inner.Location = 199+(n*6);
        r_spotLights[n].Outer.Location = 200+(n*6);
    }
    r_sun.Position.Location = 387;
    r_sun.Direction.Location = 388;
    r_sun.Color.Location = 389;
    r_sun.Strength.Location = 390;
    r_sun.Inner.Location = 391;
    r_sun.Outer.Location = 392;
    r_CamPos.Location = 393;
    u_AlbedoTexture.Location = 394;
    u_NormalTexture.Location = 395;
    u_MetalnessTexture.Location = 396;
    u_RoughnessTexture.Location = 397;
    u_AlbedoColor.Location = 398;
    u_Metalness.Location = 399;
    u_Roughness.Location = 400;
    r_AlbedoTexToggle.Location = 401;
    r_NormalTexToggle.Location = 402;
    r_MetalnessTexToggle.Location = 403;
    r_RoughnessTexToggle.Location = 404;
}
void shader_PrePass::InitShaderLocs() {
    r_Transform.Location = 1;
    r_View.Location = 2;
    r_Projection.Location = 3;
    u_AlbedoTexture.Location = 4;
    u_NormalTexture.Location = 5;
    u_MetalnessTexture.Location = 6;
    u_RoughnessTexture.Location = 7;
    u_AmbientTexture.Location = 8;
    u_EmissiveTexture.Location = 9;
    u_AlbedoColor.Location = 10;
    u_Metalness.Location = 11;
    u_Roughness.Location = 12;
    u_TextureScale.Location = 13;
    r_AlbedoTexToggle.Location = 14;
    r_NormalTexToggle.Location = 15;
    r_MetalnessTexToggle.Location = 16;
    r_RoughnessTexToggle.Location = 17;
    r_AmbientTexToggle.Location = 18;
    r_EmissiveTexToggle.Location = 19;
    r_gammaCorrect.Location = 20;
}
void shader_PrePass_Anim::InitShaderLocs() {
    for (int n = 0; n < 128; n++) {
        r_Bones[n].Location = 1+n;
    }
    r_Transform.Location = 129;
    r_View.Location = 130;
    r_Projection.Location = 131;
    u_AlbedoTexture.Location = 132;
    u_NormalTexture.Location = 133;
    u_MetalnessTexture.Location = 134;
    u_RoughnessTexture.Location = 135;
    u_AmbientTexture.Location = 136;
    u_EmissiveTexture.Location = 137;
    u_AlbedoColor.Location = 138;
    u_Metalness.Location = 139;
    u_Roughness.Location = 140;
    u_TextureScale.Location = 141;
    r_AlbedoTexToggle.Location = 142;
    r_NormalTexToggle.Location = 143;
    r_MetalnessTexToggle.Location = 144;
    r_RoughnessTexToggle.Location = 145;
    r_AmbientTexToggle.Location = 146;
    r_EmissiveTexToggle.Location = 147;
    r_gammaCorrect.Location = 148;
}
void shader_Screen::InitShaderLocs() {
    u_albedo.Location = 1;
    u_normal.Location = 2;
    u_amr.Location = 3;
    u_depth.Location = 4;
    u_diffuse.Location = 5;
    u_specular.Location = 6;
    u_emissive.Location = 7;
    u_ssao.Location = 8;
    r_outputSwitch.Location = 9;
    r_toneMap.Location = 10;
    r_gammaCorrect.Location = 11;
}
void shader_simple::InitShaderLocs() {
    r_VP.Location = 1;
    r_Transform.Location = 2;
    u_texture.Location = 3;
    u_color.Location = 4;
}
void shader_Simple_static::InitShaderLocs() {
    r_VP.Location = 1;
    r_Transform.Location = 2;
    u_texture.Location = 3;
    u_color.Location = 4;
}
void shader_simple_triplanar::InitShaderLocs() {
    r_VP.Location = 1;
    r_Transform.Location = 2;
    u_texture.Location = 3;
    u_color.Location = 4;
}
void shader_Skybox::InitShaderLocs() {
    r_inverseVP.Location = 1;
    r_skybox.Location = 2;
}
void shader_Sobel::InitShaderLocs() {
    r_texture.Location = 1;
}
void shader_Sprite::InitShaderLocs() {
    r_transform.Location = 1;
    r_transformUV.Location = 2;
    r_orthoProjection.Location = 3;
    r_spriteTex.Location = 4;
    r_textColor.Location = 5;
}
void shader_SSAO::InitShaderLocs() {
    u_amr.Location = 1;
}
void shader_wireframe::InitShaderLocs() {
    r_VP.Location = 1;
    r_Transform.Location = 2;
    u_texture.Location = 3;
    u_color.Location = 4;
}
// End of codegen
